options (
	default "build"
	
	project "Arac - Neural Network Composition Library"
	author "Justin S Bayer, bayer.justin@googlemail.com"
	version "pre0.3"

    numpy_swig_dir "/Users/bayerj/devel/thirdparty/numpy/doc/swig"
    swig_dir "src/swig"
    py_dir "src/python/arac"
)


depends (
	test.c.build ['build']
	test.c.run ['test.c.build']
	test.py ['lib']
	test ['test.c.run' 'test.py.run']
)


imports [
]


targets (

	build [
	    py [
	        |import os, sys
	        |sys.path.append(os.getcwd())
	        |import build
	        |build.compile_arac()
	    ]
	]
	
	test.c.build [
      $ %(compiler)s %(flags)s -c -o src/cpp/tests/test_structure.o src/cpp/tests/test_structure.cpp
      $ %(compiler)s -L. -lgtest -larac -o test-arac src/cpp/tests/test_structure.o
	]
	
	test.c.run [
		$ ./test-arac
	]
	
	test.py.run [
	   $ python ./src/python/runtests.py
	]
	
	test []
	
	swig [
	   $ swig -Wall -python -c++ -outdir %(swig_dir)s -I%(numpy_swig_dir)s -o %(swig_dir)s/cppbridge_wrap.cpp %(swig_dir)s/cppbridge.i
	   $ gcc -larac -L. -c -Wno-long-double %(swig_dir)s/cppbridge_wrap.cpp -Isrc/cpp/ -I/usr/local/include/python2.6 -I/usr/local/lib/python2.6/config -I/usr/local//lib/python2.6/site-packages/numpy/core/include -o %(swig_dir)s/cppbridge_wrap.o
       $ gcc -larac -L. -Wno-long-double -bundle -undefined suppress -flat_namespace %(swig_dir)s/cppbridge_wrap.o -o %(swig_dir)s/_cppbridge.so
       $ cp %(swig_dir)s/cppbridge.py %(py_dir)s/
       $ cp %(swig_dir)s/_cppbridge.so %(py_dir)s/
   ]
	
	clean [
		$ rm -rf src/cpp/structure/*.o
		$ rm -rf src/cpp/structure/connections/*.o
		$ rm -rf src/cpp/structure/modules/*.o
		$ rm -rf src/cpp/structure/networks/*.o
		$ rm libarac.so
		$ rm test-arac
		$ rm src/swig/*.so
		$ rm src/swig/*.cpp
		$ rm src/swig/*.o
		$ rm src/swig/*.py
		$ rm src/swig/*.pyc
		$ rm src/python/arac/cppbridge.py
		$ rm src/python/arac/*.pyc
		$ rm src/python/arac/tests/*.pyc
	]
)